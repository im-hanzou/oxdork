#!/usr/bin/env python3

import sys
import time
import logging
import argparse
import datetime
from assets.colors import *
from googlesearch import search

logging.basicConfig(format=f"{white}%(asctime)s {red}%(message)s{white}"
,datefmt=f"{white}%I{red}:{white}%M{red}:{white}%S%p",level=logging.DEBUG)

class Dork:
	def __init__(self):
		self.now = datetime.datetime.now()
		self.start = self.now.strftime("%a, %d %B %Y - %I:%M:%S%p")
		self.sec = time.time()
		self.seconds = time.time()-self.sec
		
	def on_connect(self,query,count):
	    number = 0
	    counter = 0
	    google_search = search(query,num=int(count),start=0,stop=None,lang="en",tld="com",pause=2)
	    for result in google_search:
	        counter += 1
	        logging.info(f"{white}Google dork: {counter}. {green}{result}{end}")
	        number += 1
	        if number >= int(count):
	        	break
	        	
	    sys.exit(f"{yellow}0xdork{white} stopped in {red}{self.seconds}{white} seconds.{end}")


if __name__ == "__main__":
	parser = argparse.ArgumentParser(description="0xDork: Google dorking tool developed by rly0nheart. | https://github.com/rlyonheart")
	parser.add_argument("query",help="search query")
	parser.add_argument("-C","--count",help="number of results to show",dest="count",required=True)
	args = parser.parse_args()
	query = args.query
	count = args.count
	print(f"{white}Connecting to google...{end}")
	while True:
		try:
			Dork().on_connect(query,count)
			
		except KeyboardInterrupt:
			sys.exit()
			
		except Exception as e:
			print(f"{white}An error occured: {red}{e}{end}")
			print(f"{white}Reconnecting...{end}")
