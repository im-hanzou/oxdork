#!/usr/bin/env python3

import datetime
import sys,argparse,logging
from time import sleep
from googlesearch import search
from assets.colors import red,redbg,yellow,green,white,end

# logging configurations
logging.basicConfig(format="%(asctime)s %(message)s",datefmt=f"[{red}%I{end}:{red}%M{end}:{red}%S%p{end}]",level=logging.INFO)

# time configurations
now = datetime.datetime.now()
start = now.strftime("%a,%d %b %Y - %I:%M:%S%p")
seconds = datetime.datetime.now()-now

# argparse configurations
parser = argparse.ArgumentParser()
parser.add_argument("-Q","--query",help="query",dest="query",required=True)
parser.add_argument("-C","--count",help="count",dest="count",required=True)
args = parser.parse_args()

query = args.query
count = args.count
arged = False
if query and count:
    try:
        arged = True
        print("\n%s%s initializing %s0xdork 0.0.2%s - (https://github.com/rly0nheart)" % (white,start,yellow,end))
        requ = 0
        counter = 0

        for result in search(query,num=int(count),start=0,stop=None,lang="en",tld="com",pause=2):
            sleep(0.04)
            counter = counter + 1
            logging.info("%sDORK%s: %s%s%s. %s%s%s" % (white,end,red,counter,end,green,result,end))
            requ += 1
            if requ >= int(count):
                break


        print(f"{yellow}0xdork{end}{white} stopped in {red}{seconds}{end}{white} seconds.")

    except Exception as e:
        logging.info(f"{redbg}ERROR{end}:{red}{e}{end}")
